<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on </title>
    <link>https://danglotb.github.io/projects/</link>
    <description>Recent content in Projects on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://danglotb.github.io/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TLPC-sensor</title>
      <link>https://danglotb.github.io/projects/post_6/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danglotb.github.io/projects/post_6/</guid>
      <description>Time-Lapse Performance Counters (TLPC) Sensor TLPC-sensor aims at providing an API to measure various Performance Counters, such as the number of executed intructions and cycles, or energy consumption (with RAPL) in a time-lapse, designed by the call of the function start() and stop().
Install You need to install libpfm4 Then, you can run:
git clone http://github.com/davidson-consulting/tlpc-sensor.git cd tlpc-sensor &amp;amp;&amp;amp; mkdir build &amp;amp;&amp;amp; cd build cmake .. make ./tlpc-sensor You need sudo priviliege and run echo -1 &amp;gt; /proc/sys/kernel/perf_event_paranoid.</description>
    </item>
    
    <item>
      <title>Diff-JJoules</title>
      <link>https://danglotb.github.io/projects/post_5/</link>
      <pubDate>Sun, 22 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danglotb.github.io/projects/post_5/</guid>
      <description>Diff-JJoules ·    diff-jjoules is a tool to be integrated in your continuous integration in order to
 measure the impact of commits on the energy consumption of the program break the build in case of an energy regression has been detected.  Install To use Diff-JJoules, you need to install JJoules and JUnit-JJoules.
Then, you can install diff-jjoules:
mvn clean install -DskipTest Usage The easiest way to use diff-jjoules, you need to clone your project twice: one for the version before applying the commit, and one for the version after applying the commit.</description>
    </item>
    
    <item>
      <title>Test Runner</title>
      <link>https://danglotb.github.io/projects/post_2/</link>
      <pubDate>Sun, 02 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://danglotb.github.io/projects/post_2/</guid>
      <description>Test Runner   
This project provides a framework to run JUnit tests in a new JVM. It allows to retrieve results using serialization / deserialization.
Supported Features:  test: run JUnit test, the whole test class or specific test cases methods. coverage: run JaCoCo to compute the instruction coverage of the given test suite or by test methods. mutation score: run PIT to compute the mutation score of the test suite.</description>
    </item>
    
    <item>
      <title>AssertFixer</title>
      <link>https://danglotb.github.io/projects/post_1/</link>
      <pubDate>Thu, 25 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://danglotb.github.io/projects/post_1/</guid>
      <description>AssertFixer This project aims at fixing assertion. The program under test is used as specification to fix the test suite.
See: Brett Daniel et al. for instance.
CLI java -jar assert-fixer.jar (-c|--classpath) &amp;lt;classpath&amp;gt; (-t|--test-class) &amp;lt;testClass&amp;gt; (-m|--test-method) &amp;lt;testMethod&amp;gt; [(-s|--source-path) &amp;lt;sourcePath&amp;gt;] [(-p|--test-path) &amp;lt;testPath&amp;gt;] [--verbose] [(-o|--output) &amp;lt;output&amp;gt;] [--gen-try-catch] [-h|--help] (-c|--classpath) &amp;lt;classpath&amp;gt; [Mandatory] Use must specify a complete classpath to execute tests on your project. The classpath should be formatted according to the OS.</description>
    </item>
    
    <item>
      <title>Diff-test-selection</title>
      <link>https://danglotb.github.io/projects/post_4/</link>
      <pubDate>Sun, 07 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://danglotb.github.io/projects/post_4/</guid>
      <description>diff-test-selection ·   Diff-Test-Selection aims at selecting the subset of test classes and methods that execute the changed code between two versions of the same program. It relies on Clover and Maven to compute the coverage and returns this subset of tests.
Diff-Test-Selection is implemented as a maven plugin that directly works from the command line, without modifying your pom.xml. See below for more details.
Usage We advise you to use the maven plugin.</description>
    </item>
    
    <item>
      <title>DSpot</title>
      <link>https://danglotb.github.io/projects/post_3/</link>
      <pubDate>Sun, 07 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://danglotb.github.io/projects/post_3/</guid>
      <description>DSpot    DSpot is a tool that generates missing assertions in JUnit tests. DSpot takes as input a Java project with an existing test suite. DSpot generates new test cases from existing ones and write them on disk. DSpot supports Java projects built with Maven and Gradle (see the --automatic-builder option)
DSpot ecosystem:
 Jenkins plugin Eclipse plugin IntelliJ plugin  Getting started Demo site Meet our demonstration website at https://dspot-demo.</description>
    </item>
    
  </channel>
</rss>